client:
- init menu in View.js and imeplement content for complexes

- complexes is based on a VR-complex, data can either be uploaded or obtained from a simulation
- results can be stored in client-side db and retrieved via link
- results (2 dim and 3 dim) can be displayed (triangulation)
  dim 0: point, 1: line, 2: triangle
  
- homology: based on given complex compute homology 

- simulation results can be save in client-side db and retrieved via links
- thus one can always proceed where one finished

- implement the application as node-module, then it can be used like so:
  require(the-system).config(port:  }.registerAlgorithms([...]).registerSimulations([....]).start();

try to use three.js + tjQuery to display 3-d simulations

- create algorithm for cubical complex 

The system could be used to test models very quickly and getting from the
data analysis basic characteristics automatically

implement automatic detection of bifurcation regions in parameter or changes in
topology and display in chart, ...

use topological data-anaylsis to analyse the simulation
read the appications in box 

One measure for the data analysis could be the Hausdorff distance between to simulations based on a set of 
start values and for different parameter.
The it is of interest if parameter-values have clusters which produce similar simulations (Hausdorff-distance is small 
between two in a cluster).

Data-analysis could be implemented in a separate R server which is invoked from node. And node serves the
simulated data to their via web-service.



